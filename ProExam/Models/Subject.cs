//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProExam.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Subject
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Subject()
        {
            this.TestSchedules = new HashSet<TestSchedule>();
            this.Subjects_Teacher = new HashSet<Subjects_Teacher>();
            this.Subjects_Student = new HashSet<Subjects_Student>();
        }

        public string Subject_ID { get; set; }
        public string Subject_Name { get; set; }
        public Nullable<int> QuestionQuantity { get; set; }
        public Nullable<int> Testing_Time { get; set; }
        public string Subject_Description { get; set; }
        [StuQuantityLessThanOrEqualToMax(ErrorMessage = "Student Quantity must not exceed Subject Maximum Quantity.")]
        public Nullable<int> Stu_Quantity { get; set; }
        public Nullable<int> Sub_Max_Quantity { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<TestSchedule> TestSchedules { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Subjects_Teacher> Subjects_Teacher { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Subjects_Student> Subjects_Student { get; set; }
        public virtual ICollection<Question> Questions { get; set; }
    }

    public class StuQuantityLessThanOrEqualToMaxAttribute : ValidationAttribute
    {
        protected override ValidationResult IsValid(object value, ValidationContext validationContext)
        {
            var stuQuantity = (int?)value;
            var subMaxQuantity = (int?)validationContext.ObjectInstance.GetType().GetProperty("Sub_Max_Quantity")?.GetValue(validationContext.ObjectInstance, null);

            if (stuQuantity.HasValue && subMaxQuantity.HasValue && stuQuantity.Value > subMaxQuantity.Value)
            {
                return new ValidationResult("Student Quantity must not exceed Subject Maximum Quantity.");
            }

            return ValidationResult.Success;
        }
    }
}


